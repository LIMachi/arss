{
  "creative_tab.arss": "Analog Redstone Suite",

  "display.arss.analog_cell.mode.set": "Set",
  "display.arss.analog_cell.mode.reset": "Reset",

  "display.arss.better_comparator.mode.compare": "Compare",
  "display.arss.better_comparator.mode.subtract": "Subtract",

  "display.arss.adder.mode.compare": "Compare",
  "display.arss.adder.mode.add": "Add",

  "display.arss.checker.mode.equal": "Equal",
  "display.arss.checker.mode.different": "Different",

  "display.arss.edge_detector.mode.rising": "Rising Edge",
  "display.arss.edge_detector.mode.falling": "Falling Edge",

  "display.arss.demuxer.mode.1": "Bit 1",
  "display.arss.demuxer.mode.2": "Bit 2",
  "display.arss.demuxer.mode.4": "Bit 4",
  "display.arss.demuxer.mode.8": "Bit 8",
  "display.arss.demuxer.mode.side_control": "Side Controlled",

  "display.arss.delayer.mode.1": "1 Tick",
  "display.arss.delayer.mode.2": "2 Tick",
  "display.arss.delayer.mode.3": "3 Tick",
  "display.arss.delayer.mode.4": "4 Tick",
  "display.arss.delayer.mode.side_control": "Side Controlled",

  "display.arss.shifter.mode.up": "Shift Up",
  "display.arss.shifter.mode.down": "Shift Down",

  "display.arss.signal_generator.mode.inverse_saw": "Inverted Saw",
  "display.arss.signal_generator.mode.random": "Random",
  "display.arss.signal_generator.mode.saw": "Saw",
  "display.arss.signal_generator.mode.sine": "Sine",
  "display.arss.signal_generator.mode.square": "Square",
  "display.arss.signal_generator.mode.triangle": "Triangle",

  "display.arss.sequencer.mode.play_once": "Play Once",
  "display.arss.sequencer.mode.play_loop": "Loop",
  "display.arss.sequencer.mode.record": "Record",

  "display.arss.analog_note_block.high_pitch.true": "Pitch: High",
  "display.arss.analog_note_block.high_pitch.false": "Pitch: Low",

  "display.arss.scrollable_block.can_scroll.true": "Unlocked",
  "display.arss.scrollable_block.can_scroll.false": "Locked",

  "display.arss.diode_block.sidedness.all_active": "All active",
  "display.arss.diode_block.sidedness.right_disabled": "Right disabled",
  "display.arss.diode_block.sidedness.left_disabled": "Left disabled",
  "display.arss.diode_block.sidedness.both_side_disabled": "No sides",
  "display.arss.diode_block.sidedness.input_disabled": "Sides only",

  "display.arss.keyboard_item.linked_to": "Keyboard linked to: %s",
  "display.arss.keyboard_item.cant_link_to": "Invalid block: %s",
  "display.arss.keyboard_item.clear_link": "Keyboard unlinked",

  "display.arss.keyboard_item.semitone.0": "C",
  "display.arss.keyboard_item.semitone.1": "C#",
  "display.arss.keyboard_item.semitone.2": "D",
  "display.arss.keyboard_item.semitone.3": "D#",
  "display.arss.keyboard_item.semitone.4": "E",
  "display.arss.keyboard_item.semitone.5": "F",
  "display.arss.keyboard_item.semitone.6": "F#",
  "display.arss.keyboard_item.semitone.7": "G",
  "display.arss.keyboard_item.semitone.8": "G#",
  "display.arss.keyboard_item.semitone.9": "A",
  "display.arss.keyboard_item.semitone.10": "A#",
  "display.arss.keyboard_item.semitone.11": "B",

  "display.arss.keyboard_item.toggle_keyboard.false": "Stopped keyboard",
  "display.arss.keyboard_item.toggle_keyboard.true": "Activated keyboard",

  "display.arss.redstone_booster.used": "Boosted",

  "item.arss.enriched_redstone__": "Cupro Ferrate Oxide",
  "item.arss.enriched_redstone_": "Oxidized Redstone Compound",
  "item.arss.enriched_redstone": "Enriched Redstone",
  "item.arss.perfected_redstone": "Perfected Redstone",
  "item.arss.sequencer_memory_item": "Sequencer Record",
  "item.arss.keyboard_item": "Remote keyboard",
  "item.arss.redstone_booster": "Redstone booster",

  "item.arss.sequencer_memory_item.desc": "§kBurnt Disk§r",

  "block.arss.adder": "Adder",
  "block.arss.analog_and": "Analog And",
  "block.arss.analog_button": "Analog Button",
  "block.arss.analog_cell": "Analog Cell",
  "block.arss.analog_lever": "Analog Lever",
  "block.arss.analog_nand": "Analog Nand",
  "block.arss.analog_note_block": "Analog Note Block",
  "block.arss.analog_nor": "Analog Nor",
  "block.arss.analog_or": "Analog Or",
  "block.arss.analog_redstone_block": "Analog Redstone Block",
  "block.arss.analog_redstone_lamp": "Analog Redstone Lamp",
  "block.arss.analog_redstone_torch": "Analog Redstone Torch",
  "block.arss.analog_xnor": "Analog Xnor",
  "block.arss.analog_xor": "Analog Xor",
  "block.arss.better_comparator": "Comparator",
  "block.arss.checker": "Checker",
  "block.arss.delayer": "Delayer",
  "block.arss.demuxer": "Demuxer",
  "block.arss.edge_detector": "Edge Detector",
  "block.arss.enriched_redstone": "Enriched Redstone",
  "block.arss.perfected_redstone": "Perfected Redstone",
  "block.arss.shifter": "Shifter",
  "block.arss.signal_generator": "Signal Generator",
  "block.arss.analog_jukebox": "Analog Jukebox",
  "block.arss.instrument_swapper_block": "Instrument Swapper",
  "block.arss.sequencer": "Sequencer",
  "block.arss.analog_dispenser_block": "Precise Dispenser",
  "block.arss.pixel_block": "Pixel",
  "block.arss.programmable_gate": "Programmable Gate",

  "key.hold_to_scroll": "Hold to scroll",
  "key.categories.arss": "Analog Redstone Suite",

  "tooltip.help.press_shift_for_help": "§7[Shift]: Help§r",
  "tooltip.help.press_ctrl_for_help": "§7[Ctrl]: Controls§r",

  "tooltip.help.general.1": "§aCalculation§b is done using the §aback signal§b and the §ahighest side signal§b.§r",
  "tooltip.help.general.2": "§bThe output value can be §alocked§b (prevent scrolling) by holding §5[%2$s§5]§b and using §5[%3$s§5]§b with a redstone torch in hand (analog or vanilla).§r",
  "tooltip.help.general.3": "§bTo select the power output, hold §5[%1$s§5]§b and use §5Scroll Wheel§b.§r",
  "tooltip.help.general.3_alternate": "§bTo select the power output, use §5Scroll Wheel§b (you can limit this action by binding a key).§r",
  "tooltip.help.general.4": "§bYou can hide the redstone dot on this block by using §5[%3$s§5]§b with a redstone torch in hand (analog or vanilla).§r",
  "tooltip.help.general.5": "§bYou can disable inputs by using §5[%3$s§5]§b with a redstone torch in hand (analog or vanilla)§r",

  "tooltip.help.shift.adder": "§bExact inverse of the §aRedstone Comparator§b.\n\nIn '§6Compare§b' mode, it will test if the §aback signal§b is less than or equal to the §ahighest side signal§b ( §a<=§b ).\n\nIn '§6Add§b' mode, it will add the §aback signal§b to the §ahighest side signal§b (up to §c15§b).§r",
  "tooltip.help.shift.analog_and": "§bRuns the binary operation And ( §a&§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_nand": "§bRuns the binary operation Nand ( §a!&§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_or": "§bRuns the binary operation Or ( §a|§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_nor": "§bRuns the binary operation Nor ( §a!|§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_xor": "§bRuns the binary operation XOr ( §a^§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_xnor": "§bRuns the binary operation XNOr ( §a!^§b ) for the two input signals.\n\n%1$s",
  "tooltip.help.shift.analog_cell": "§bMemory cell that can store an analog signal.\n\nIn '§6Set§b' mode, it will constantly update and store the §aback signal§b as long as there is a §asignal provided on the side§b.\n\nIn '§6Reset§b' mode, it will constantly update and store the §aback signal§b (if greater than §c0§b). Any §asignal supplied on the side§b will reset output to §c0§b.§r",
  "tooltip.help.shift.better_comparator": "§bA glorified §aVanilla Comparator§b which works on §91 tick pulses§b. The §asides§b can read signals from even more sources (example: a lever).§r",
  "tooltip.help.shift.checker": "§bIn '§6Equal§b' mode, it checks if the §aback signal§b is §aexactly equal§b to the §ahighest side signal§b. \n\nIn '§6Different§b' mode, it checks if the §atwo signals§b are different from one another.\n\n§aAlways outputs the same signal strength received from back signal with successful check.§r",
  "tooltip.help.shift.delayer": "§bDelays the §ainput signal§b by §91, 2, 3, or 4 ticks§b, without changing the §cstrength§b or length (§9duration§b) of the signal.\n\nHas a §65th mode§b that will delay the §ainput signal§b using the §ahighest side signal§b ( §9+1§b ).§r",
  "tooltip.help.shift.demuxer": "§bChecks for bit §c1, 2, 4, or 8§b from the §aback signal§b.\n\nHas a §65th mode§b where the tested bit is selected by the §ahighest side signal§b (§c1§b-> bit 1, §c2§b-> bit 2, §c3§b-> bit 4, §c4§b-> bit 8).§r",
  "tooltip.help.shift.edge_detector": "§bIn '§6Rising Edge§b' mode, it emits a §91-tick pulse§b when the §aback signal§b is increased.\n\nIn '§6Falling Edge§b' mode, it emits a §91-tick pulse§b when the §aback signal§b is decreased.§r",
  "tooltip.help.shift.shifter": "§bIn '§6Shift Up§b' mode, it shifts any bit(s) up by the §ahighest side signal§b.\n\nIn '§6Shift Down§b' mode, it shifts any bit(s) down by the §ahighest side signal§b.\n\nExample: In '§6Shift Up§b' mode, with a §aside signal§b of §c1§b, the §aback signal§b of §c6§b would output §c12§b.§r",
  "tooltip.help.shift.signal_generator": "§bGenerates a signal sequentially §9every tick§b.\n\n§6Sequence§b will only advance while §apowered (from the back§b).\n\nIn '§6Saw§b', '§6Inverted Saw§b', '§6Triangle§b' and '§6Random§b' mode, the §aoutput signal§b will be between §c0-15§b while not powered from the sides.\nIf §apowered from the sides§b, the signal will stay within a set range (§abetween the lowest side signal and highest side signal, inclusive§b).\n\nIn '§6Square§b' mode, the time between oscillation will be equal to the §ahighest side signal §9+ 1 tick§b.\n\nIn '§6Sine§b' mode, the number of degrees §9per tick§b is equal to the §ahighest side§b signal §c+ 1§b.§r",
  "tooltip.help.shift.analog_redstone_torch": "§bWorks just like a normal redstone torch but can have a specific §aoutput value§b set.§r",
  "tooltip.help.shift.analog_button": "§bWorks just like a normal stone button but can have a specific §aoutput value§b set.§r",
  "tooltip.help.shift.analog_lever": "§bWorks just like a normal lever but can have a specific §aoutput value§b set.§r",
  "tooltip.help.shift.analog_redstone_block": "§bWorks just like a normal redstone block §a(can be moved)§b but can have a specific §aoutput value§b set.§r",
  "tooltip.help.shift.analog_redstone_lamp": "§bWorks just like a normal redstone lamp but with §evariable light levels§b relative to the §credstone signal §areceived§b.§r",
  "tooltip.help.shift.analog_jukebox": "§bThis jukebox has an §6inventory§b consisting of 15 spaces for music discs only. Depending on the §credstone signal §areceived§b, it will play a different music disc.§r",
  "tooltip.help.shift.instrument_swapper_block": "§bUsed to hot-swap noteblock §6instrument§b without replacing a block. Has an §6inventory§b consisting of 16 spaces, you can place any block or head that has a specific instrument or sound for noteblocks in those slots. §cSignal strength§b determines which inventory slot is used (§c0-15§b).§r",
  "tooltip.help.shift.analog_note_block": "§bThis note block plays a §fsound§b with the pitch dependent on the §csignal strength§b.\n\n§aRight-clicking§b the block will switch between ranges '§6high§b' and '§6low§b'.§r",
  "tooltip.help.shift.enriched_redstone": "§bThis redstone dust is mixed with conductive metals to improve §aefficiency§b and transport §adistance§b.\n\nLoses §cone signal strength§b every §f4 blocks§b instead of every §f1 block§b.§r",
  "tooltip.help.shift.perfected_redstone": "§bThis redstone dust is considered to be an alloy of conductive materials bound together (through sheer heat).\n\n§cComplete signal strength retention§b (§fup to 32 blocks§b).§r",
  "tooltip.help.shift.keyboard_item": "Keyboard to remotely control any block that has an analog output (ex: target block, analog redstone block, weighted pressure plate, etc...). Has a configuration screen, where the 15 buttons with a number on the side represent the bindings to a redstone power (pressing this key on your keyboard or MIDI device will emit this redstone power). Clicking those buttons allow you to rebind them by pressing any key on your keyboard or MIDI device. To select your MIDI device, use the top right text box (suggestions will pop up), and you can validate the selection with the top left button. If you plugged your device will the screen was open, close it and reopen it to refresh the list of devices.",
  "tooltip.help.shift.sequencer_record": "By burning a disc, you erased it's sounds and made it malleable enough to transfer data from sequencer to sequencer. It's still usable in a Jukebox, but only produces a weird noise.",
  "tooltip.help.shift.analog_dispenser_block": "Like a vanilla Dispenser, but can only be powered in the back and the strength of the power will determine the strength of ejection. You can power the sides to angle the ejection in the opposite direction (ex: powering the dispenser from the right with power 15, and the back with power 15, will fire in front and to the left at a 45 degrees angle).",
  "tooltip.help.shift.sequencer": "Complex programmable diode to generate analog sequences of redstone pulse/signals. In 'Play Once' mode, will execute the sequence only once when the start and/or finish input are powered, In 'Loop', keep repeating the sequence when the end is reached, In 'Record' mode, the record input will be recorded while the start and/or finish inputs are powered. Use the help provided in the configuration screen for more information (top right button).",
  "tooltip.help.shift.redstone_booster": "Use on blocks to boost them. The boosted blocks run as fast as they can (1 game tick instead of 1 redstone tick, aka 2 game ticks). Might cause visual glitches, but signals emitted in 1 game tick pulses do work with redstone wires (Vanilla or from this mod).",
  "tooltip.help.shift.pixel_block": "Block that changes color based on input received. Use the same palette order as wool/terracotta, with the exception of black being emitted for power 0 and white at power 15. Does not transmit redstone (will not bleed it's colors to neighboring pixels if directly powered).",

  "tooltip.help.ctrl.adder": "%5$s",
  "tooltip.help.ctrl.analog_and": "%5$s",
  "tooltip.help.ctrl.analog_nand": "%5$s",
  "tooltip.help.ctrl.analog_or": "%5$s",
  "tooltip.help.ctrl.analog_nor": "%5$s",
  "tooltip.help.ctrl.analog_xor": "%5$s",
  "tooltip.help.ctrl.analog_xnor": "%5$s",
  "tooltip.help.ctrl.analog_cell": "%5$s",
  "tooltip.help.ctrl.better_comparator": "%5$s",
  "tooltip.help.ctrl.checker": "%5$s",
  "tooltip.help.ctrl.delayer": "%5$s",
  "tooltip.help.ctrl.demuxer": "%5$s",
  "tooltip.help.ctrl.edge_detector": "%5$s",
  "tooltip.help.ctrl.shifter": "%5$s",
  "tooltip.help.ctrl.signal_generator": "%5$s",
  "tooltip.help.ctrl.analog_redstone_torch": "%3$s\n\n%2$s",
  "tooltip.help.ctrl.analog_button": "%3$s\n\n%2$s",
  "tooltip.help.ctrl.analog_lever": "%3$s\n\n%2$s",
  "tooltip.help.ctrl.analog_redstone_block": "%3$s\n\n%2$s\n\n%4$s",
  "tooltip.help.ctrl.analog_redstone_lamp": "%4$s",
  "tooltip.help.ctrl.analog_jukebox": "%4$s",
  "tooltip.help.ctrl.instrument_swapper_block": "",
  "tooltip.help.ctrl.analog_note_block": "%4$s",
  "tooltip.help.ctrl.enriched_redstone": "",
  "tooltip.help.ctrl.perfected_redstone": "",
  "tooltip.help.ctrl.keyboard_item": "Shift Right click a valid block to bind, Shift right click air/invalid block/bound block to open the configuration screen. Right click to toggle on/off. Right click lectern to put it on. shift right click lectern to retrieve the keyboard, right click lectern to toggle the keyboard on/off. The output of the keyboard will also be emitted as a comparator output by the lectern when used.",
  "tooltip.help.ctrl.sequencer_record": "Right click a sequencer to copy it's data to the record, Shift right click a sequencer to override it's data with the record's. Right click the air to copy the data to your clip board, Shift right click the air to load data from your clip board.",
  "tooltip.help.ctrl.analog_dispenser_block": "",
  "tooltip.help.ctrl.sequencer": "Right click to open the screen, Shift Right click to cycle modes.\n\n%5$s",
  "tooltip.help.ctrl.redstone_booster": "Right click on Analog Buttons, Analog Torch or any Diode/Gate added by this mod to boost them.",
  "tooltip.help.ctrl.pixel_block": "",

  "tooltip.keyboard_item.link": "Linked to %s (%s, %s, %s)",
  "tooltip.keyboard_item.unlinked": "Not linked",

  "top.info.locked": "§8Locked§r",
  "top.info.unlocked": "§eUnlocked§r",
  "top.info.stored_power": "§eStored power: §c%s§r",

  "top.info.mode": "§eMode: §r",
  "top.info.sides": "§eSides: §r",

  "top.info.sides_state.all_active": "All active",
  "top.info.sides_state.right_disabled": "Right disabled",
  "top.info.sides_state.left_disabled": "Left disabled",
  "top.info.sides_state.both_side_disabled": "No sides",
  "top.info.sides_state.input_disabled": "Sides only",

  "top.info.pitch": "§7Pitch: §r",
  "top.info.pitch.high": "§eHigh§r",
  "top.info.pitch.low": "§eLow§r",

  "top.info.power": "§7Power: §r%s",
  "top.info.light_level": "§6Light level: §r%s",

  "screen.title.analog_jukebox": "Analog Jukebox",
  "screen.title.instrument_swapper": "Instrument Swapper",

  "screen.button.midi_keyboard_binding": "%s %s %s",
  "screen.button.bind_midi": "Bind MIDI device",
  "screen.button.hide": "Hide screen",

  "screen.widget.bound_to": "Bound to: %s",

  "screen.arss.programmable_gate.title": "Programmable Gate",
  "screen.arss.sequencer.title": "Sequencer (%s)",
  "screen.arss.sequencer.help_button": "I",

  "screen.arss.sequencer.input_mapping.record_pass_through": "Record/Pass-through",
  "screen.arss.sequencer.input_mapping.start": "Start",
  "screen.arss.sequencer.input_mapping.finish": "Finish",
  "screen.arss.sequencer.input_side.back": "Back",
  "screen.arss.sequencer.input_side.right": "Right",
  "screen.arss.sequencer.input_side.left": "Left",
  "screen.arss.sequencer.input_side.disabled": "Disabled",
  "screen.arss.sequencer.head_info": "Head",
  "screen.arss.sequencer.head_tick": "Tick: %s (%ss)",
  "screen.arss.sequencer.head_power": "Power: %s",
  "screen.arss.sequencer.cursor_info": "Cursor",
  "screen.arss.sequencer.cursor_tick": "Tick: %s (%ss)",
  "screen.arss.sequencer.cursor_power": "Power: %s",
  "screen.arss.sequencer.recording.true":  "Recording",
  "screen.arss.sequencer.recording.false":  "Not recording",
  "screen.arss.sequencer.playing.true":  "Playing",
  "screen.arss.sequencer.playing.false":  "Not playing",
  "screen.arss.sequencer.help":  "§5Middle Click§r: set §7length§r to §lcursor§r (§5+Ctrl§r: toggle §alimit§r)\n§5Left Click§r: move §bhead§r to §lcursor§r (§5+Ctrl§r: copy current §bhead§r §cpower§r to new §bhead§r position, §5+Shift§r: §9select§r while moving)\n§5Right Click§r: set §cpower§r under §lcursor§r\n§5Up/Down§r: increase/decrease §cpower§r at §bhead§r/§9selection§r.\n§5Left/Right§r: move §bhead§r left/right or whole §9selection§r (§5+Ctrl§r: also copy §cpower§r)\n§5Left/Right + Shift§r: §9select§r and move §bhead§r (instead of moving §9selection§r)\n§5Home/End§r: move §bhead§r to first tick or last tick (§5+Ctrl§r: also copy §cpower§r, §5+Shift§r: also §9select§r)\n§5Page Up/Down§r: move view by a full screen backward/forward (50 ticks)\n§5Scroll Up/Down§r: move view by 10 ticks\n§5Ctrl + C/X§r: copy/cut §9selection§r to internal clip board\n§5Ctrl + V§r: paste §9selection§r to the §bhead§r (moving the §bhead§r right in the process)§r\n§5Space§r: Play/Pause",

  "screen.arss.sequencer.show_help": "Open help screen",
  "screen.arss.sequencer_help.chapter_count_between_2_and_7": "7",
  "screen.arss.sequencer_help.chapter_kind_between_string_and_formatted_text": "string",
  "screen.arss.sequencer_help.chapter_button.0": "Bindings",
  "screen.arss.sequencer_help.chapter.0": "§bMouse§r\n§b- Left click:§r move the head.\n§b- Right click:§r set power.\n§b- Middle click:§r set length\n    §a+ Ctrl:§r toggle limit/sub-sequence.\n§b- Scroll Up/Down:§r move the view\n    (without moving the head) to\n    the next/previous ticks.\n\n§bKeyboard§r\n§b- Space:§r toggle playback\n    (as if the sequencer was\n    powered/unpowered).\n§b- Left/Right:§r Move the head\n    (or selected area)\n    forward/backward.\n§b- Up/Down:§r increase/decrease the\n    power at the §bhead§r or §bselection§r.\n   §a+ Shift:§r steps of 5.\n   §a+ Ctrl:§r maximum/minimum (15/0).\n§b- Home/End:§r move the head to\n    the start/end of the sequence.\n§b- Ctrl + head/selection moving:§r clone\n    power at new head/selection\n    location.\n§b- Shift + Head moving:§r selection.\n§b- Escape:§r Cancel selection.\n§b- Ctrl + C:§r copy selection.\n§b- Ctrl + V:§r paste selection at head\n    position (and only at head position,\n    will not replace a selection).\n§b- Ctrl + X:§r cut (aka: copy and set\n    the selection to a power of 0).\n§b- Page Up/Down:§r move the view to\n    the next/previous 50 ticks\n    (like scrolling).",
  "screen.arss.sequencer_help.chapter_button.1": "Color coding",
  "screen.arss.sequencer_help.chapter.1": "§c§lRed§r: redstone power\n\n§b§lBlue§r: head/tick\n\n§7§lGray:§r end\n\n§a§lGreen§r: limits/sub-sequences\n\n§e§lYellow§r: Head and cursor information (where they are in the sequence in tick and what power will be emitted)\n\n§lButtons§r: set how the sides of the sequencer will be used.",
  "screen.arss.sequencer_help.chapter_button.2": "Length",
  "screen.arss.sequencer_help.chapter.2": "The length (dark grey line) is where the sequence finishes (aka stop in Play Once mode, or repeat in Loop mode). To set the length, use middle click. You can also set limits/boundaries (green lines) in the sequence (toggle via middle click + ctrl). The first tick, limits and the length (aka last tick) have values above them, equal to the power require to use those limits. For more info on Limits, see 'Play' chapter.",
  "screen.arss.sequencer_help.chapter_button.3": "Head",
  "screen.arss.sequencer_help.chapter.3": "The head (light blue line) is where the sequencer is currently reading the power. When playing, the head will automatically move right every tick. To move the head, use left click or the arrow keys (left/right). While moving the head, you can hold the Ctrl key to copy the power and the Shift key to select an area.",
  "screen.arss.sequencer_help.chapter_button.4": "Power",
  "screen.arss.sequencer_help.chapter.4": "The power can be set in two ways, either with right-click and/or up/down keys, or recorded using the record mode. In record mode, if you power a start/finish side (left/right by default), then the record side (back by default) will be copied to the sequencer and the head will advance by 1 tick.",
  "screen.arss.sequencer_help.chapter_button.5": "Selection",
  "screen.arss.sequencer_help.chapter.5": "While moving the head, you can hold Shift to select an area. Once an area is selected, moving the head with the arrow keys (left/right) will instead move the selection left/right. Ctrl + C will copy the selection to an internal clipboard, Ctrl + X will cut (same as copy, but will also reset the power in the selection). Ctrl + V will paste the last copy/cut to the head, moving it to the right in the process.",
  "screen.arss.sequencer_help.chapter_button.6": "Play",
  "screen.arss.sequencer_help.chapter.6": "You can test a sequence by pressing Space to toggle play mode (as if it was powered).\nIf you have defined limits (see 'Length' chapter), and set the inputs (bottom buttons named 'start' and 'finish'), then the sequence played will be between the start limit and finish limit. Example: 'start' is 1 and 'finish' is 2, we set a limit on tick 10, the sequence played will be between tick 0 and tick 10. If we power 'start' with a signal of 2 and end with 15 or 0, then every ticks from 10 to length will be played.",

  "book.sculk_vibrations.creative_tab_help": "Crafted by combining a 'Book and Quill' with a 'Sculk Sensor' or 'Calibrated Sculk Sensor' (the sensor will not be consumed).",
  "book.sculk_vibrations.page_1": "Step\nSwim\nFlap",
  "book.sculk_vibrations.page_2": "Projectile land\nHit ground\nSplash",
  "book.sculk_vibrations.page_3": "Item interact finish\nProjectile shoot\nInstrument play",
  "book.sculk_vibrations.page_4": "Entity roar\nEntity shake\nElytra glide",
  "book.sculk_vibrations.page_5": "Entity dismount\nEquip",
  "book.sculk_vibrations.page_6": "Entity interact\nShear\nEntity mount",
  "book.sculk_vibrations.page_7": "Entity damage",
  "book.sculk_vibrations.page_8": "Drink\nEat",
  "book.sculk_vibrations.page_9": "Container close\nBlock close\nBlock deactivate\nBlock detach",
  "book.sculk_vibrations.page_10": "Container open\nBlock open\nBlock activate\nBlock attach\nPrime fuse\nNote block play",
  "book.sculk_vibrations.page_11": "Block change",
  "book.sculk_vibrations.page_12": "Block destroy\nFluid pickup",
  "book.sculk_vibrations.page_13": "Block place\nFluid place",
  "book.sculk_vibrations.page_14": "Entity place\nLightning strike\nTeleport",
  "book.sculk_vibrations.page_15": "Entity die\nExplosion"
}